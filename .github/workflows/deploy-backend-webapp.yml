name: Deploy Backend to Azure Web App (Code)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: web-teknotassen
  AZURE_RESOURCE_GROUP: teknotassen-rg

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Login to Azure (OIDC)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      # Install dependencies
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      # Build application (if needed)
      - name: Build application
        working-directory: ./backend
        run: |
          echo "‚úÖ Dependencies installed"
          echo "‚úÖ Application ready for deployment"

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ./backend

      # Set environment variables
      - name: Set Web App configuration
        run: |
          echo "üîß Setting Web App configuration for Node.js"
          
          # Set Node.js runtime
          az webapp config set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --linux-fx-version "NODE|20-lts"
          
          # Set startup command
          az webapp config set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --startup-file "npm start"
          
          echo "‚úÖ Web App configured for Node.js"

      # Wait for deployment
      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          sleep 30

      # Resolve Web App hostname
      - name: Resolve Web App hostname
        id: resolve-host
        run: |
          HOSTNAME=$(az webapp show \
            --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
            --name "${{ env.AZURE_WEBAPP_NAME }}" \
            --query defaultHostName -o tsv)
          echo "HOSTNAME=$HOSTNAME" >> $GITHUB_ENV
          echo "üîç Resolved host: $HOSTNAME"

      # Wait for /healthz to respond
      - name: Wait for /healthz
        shell: bash
        run: |
          echo "üè• Waiting for https://${HOSTNAME}/healthz"
          for i in {1..30}; do
            if curl -fsS --max-time 10 "https://${HOSTNAME}/healthz" > /dev/null; then
              echo "‚úÖ Healthy at https://${HOSTNAME}/healthz"
              exit 0
            fi
            echo "üîÑ Attempt $i/30 ‚Ä¶ not ready yet"; sleep 10
          done
          echo "‚ùå App never became healthy"; exit 1

      # Deployment success info
      - name: Deployment success info
        run: |
          echo "üéâ Backend deployed successfully!"
          echo "Web App: https://${HOSTNAME}"
          echo "Health: https://${HOSTNAME}/healthz"
          echo "Runtime: Node.js 20 LTS"
          echo "Deployment: Code (no container)"
